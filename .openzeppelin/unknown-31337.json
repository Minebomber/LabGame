{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x5FC8d32690cc91D4c39d9d3abcBD16989F875707",
    "txHash": "0x4549b6fbc0aad80ec8237ad3967ecb4d800d3f0b2ff00ab332b2647c9276829f"
  },
  "proxies": [
    {
      "address": "0x9fE46736679d2D9a65F0992F2272dE9f3c7fa6e0",
      "txHash": "0x4182372452b896f3027053038dac78b3dc1232d10bb423745a159fd0f5061a96",
      "kind": "transparent"
    },
    {
      "address": "0xDc64a140Aa3E981100a9becA4E685f962f0cF6C9",
      "txHash": "0x2eef703a5a1737b4b762d3528c1db90844e60ebf4c6c344673c13bdd048921c8",
      "kind": "transparent"
    },
    {
      "address": "0x0165878A594ca255338adfa4d48449f69242Eb8F",
      "txHash": "0x7dfd90d54f7b8594ca71863223418f90a3849997bbe47b0998855a61cf0ba773",
      "kind": "transparent"
    },
    {
      "address": "0x2279B7A0a67DB372996a5FaB50D91eAA73d2eBe6",
      "txHash": "0x351ce653eaf79f78586cce892dd99cc323cf11615fcd5fb5f33543560ef32752",
      "kind": "transparent"
    },
    {
      "address": "0x610178dA211FEF7D417bC0e6FeD39F05609AD788",
      "txHash": "0x3a338b108d68e257808f8c571745924e32e7ffcab9c94bcb0ae479ae7acf6250",
      "kind": "transparent"
    },
    {
      "address": "0xA51c1fc2f0D1a1b8494Ed1FE312d7C3a78Ed91C0",
      "txHash": "0x5c8be828aa9bd68297aaa66f301e1faba0d8bd8d32e0142ca8f14ba1e546ee40",
      "kind": "transparent"
    },
    {
      "address": "0x9A676e781A523b5d0C0e43731313A708CB607508",
      "txHash": "0xad0912aaad9c56373f9565d6a36d5acbc4f5a7b430d3d30ff38075a4af816b4f",
      "kind": "transparent"
    },
    {
      "address": "0x851356ae760d987E095750cCeb3bC6014560891C",
      "txHash": "0x4d82585afd1a6c916e42c7afdb2d3f9fc6b601c75802ef2809bf6ff2293f204a",
      "kind": "transparent"
    },
    {
      "address": "0x95401dc811bb5740090279Ba06cfA8fcF6113778",
      "txHash": "0x0a7b524ea6c76a593faeacde794820eb696a12e5fde41e36b9832e0ced256970",
      "kind": "transparent"
    },
    {
      "address": "0x998abeb3E57409262aE5b751f60747921B33613E",
      "txHash": "0x40e3cde611d90e9a44b4e04e9c6276e8905fc621db01e465194a62c51d87d80d",
      "kind": "transparent"
    },
    {
      "address": "0x70e0bA845a1A0F2DA3359C97E0285013525FFC49",
      "txHash": "0x5948ff7e6c2458a0fbb925679b945bee3d5f57def65f7c91380b7d3812118f85",
      "kind": "transparent"
    },
    {
      "address": "0x4826533B4897376654Bb4d4AD88B7faFD0C98528",
      "txHash": "0x187a4771dd5c5b6238646d27e4b538d073819716fc79c51b8a4e8530a42a1d7b",
      "kind": "transparent"
    },
    {
      "address": "0x99bbA657f2BbC93c02D617f8bA121cB8Fc104Acf",
      "txHash": "0x52b663ebfd35cae1c2dfc25b25a55762e4bb6c5c82b912be7cd23652bdd4e725",
      "kind": "transparent"
    },
    {
      "address": "0x5eb3Bc0a489C5A8288765d2336659EbCA68FCd00",
      "txHash": "0x73a66bba408978fda058b1b059c634b2dd64adba51a84c9844a7cd05780397ca",
      "kind": "transparent"
    },
    {
      "address": "0x36C02dA8a0983159322a80FFE9F24b1acfF8B570",
      "txHash": "0x5e029b7c20a88a24533b859a38097f14b2323c9a01f5d23f1ad1d3d527e27251",
      "kind": "transparent"
    },
    {
      "address": "0x809d550fca64d94Bd9F66E60752A544199cfAC3D",
      "txHash": "0xf09eb41fe616cb14629630e81ab612b2f6af9bb7fcdcb7208a0a963144b257eb",
      "kind": "transparent"
    },
    {
      "address": "0x4c5859f0F772848b2D91F1D83E2Fe57935348029",
      "txHash": "0x56f203a0bbf5aa6e31fe04d64dbb4162403ab8891fff8bf371ca58579deb3016",
      "kind": "transparent"
    },
    {
      "address": "0x82e01223d51Eb87e16A03E24687EDF0F294da6f1",
      "txHash": "0x2da05fdfa021abc643e481e3e6404ad62d3c1c054f1b2509e2754caa7752442f",
      "kind": "transparent"
    }
  ],
  "impls": {
    "022fbdb64477ee2f8fc9d62e9e4f78aa65e6e490dbda472f144d3186a0577ec2": {
      "address": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
      "txHash": "0xfa828d6f2c2e986aa4c53dc5b95b96619e79ea847a77b600bae54a61d545b0b6",
      "layout": {
        "storage": [
          {
            "label": "requests",
            "offset": 0,
            "slot": "0",
            "type": "t_array(t_struct(Request)15_storage)dyn_storage",
            "contract": "TestVRFCoordinatorV2",
            "src": "contracts/test/TestVRFCoordinatorV2.sol:14"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(Request)15_storage)dyn_storage": {
            "label": "struct TestVRFCoordinatorV2.Request[]",
            "numberOfBytes": "32"
          },
          "t_struct(Request)15_storage": {
            "label": "struct TestVRFCoordinatorV2.Request",
            "members": [
              {
                "label": "sender",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "numWords",
                "type": "t_uint32",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          }
        }
      }
    },
    "d975a82eab15af86c365890a3084f232b004d87c1d49100a90b87bff7fe1712f": {
      "address": "0xa513E6E4b8f2a923D98304ec87F64353C4D5C853",
      "txHash": "0x99da7e6f87599e87ab3fb9bbea8e28ffe7b16f75d64b631f3e66b104aa08c55b",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)123_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:235"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "201",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:102"
          },
          {
            "label": "tokenClaims",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "Serum",
            "src": "contracts/Serum.sol:29"
          },
          {
            "label": "mutantEarnings",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)4_storage",
            "contract": "Serum",
            "src": "contracts/Serum.sol:31"
          },
          {
            "label": "mutantCounts",
            "offset": 0,
            "slot": "256",
            "type": "t_array(t_uint256)4_storage",
            "contract": "Serum",
            "src": "contracts/Serum.sol:32"
          },
          {
            "label": "pendingClaims",
            "offset": 0,
            "slot": "260",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Serum",
            "src": "contracts/Serum.sol:34"
          },
          {
            "label": "labGame",
            "offset": 0,
            "slot": "261",
            "type": "t_contract(LabGame)5834",
            "contract": "Serum",
            "src": "contracts/Serum.sol:36"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)4_storage": {
            "label": "uint256[4]",
            "numberOfBytes": "128"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(LabGame)5834": {
            "label": "contract LabGame",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)123_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)123_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "3a59aca4d9d92d1563abd4c5e7b8f9289c5978d932614fee7f8a133ee0e377e7": {
      "address": "0x8A791620dd6260079BF849Dc5567aDC3F2FdC318",
      "txHash": "0x6664948474c64823abf398105b6c3ee3a1e5d80dafe453e1e2e7320dd677edee",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "label": "traits",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(Trait)6118_storage))",
            "contract": "Metadata",
            "src": "contracts/Metadata.sol:29"
          },
          {
            "label": "labGame",
            "offset": 0,
            "slot": "102",
            "type": "t_contract(LabGame)5834",
            "contract": "Metadata",
            "src": "contracts/Metadata.sol:31"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(LabGame)5834": {
            "label": "contract LabGame",
            "numberOfBytes": "20"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(Trait)6118_storage))": {
            "label": "mapping(uint256 => mapping(uint256 => struct Metadata.Trait))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Trait)6118_storage)": {
            "label": "mapping(uint256 => struct Metadata.Trait)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Trait)6118_storage": {
            "label": "struct Metadata.Trait",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "image",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "058e39e2355bdc6488f5da40e1465110dbd00dd21f2ee4f95c5ec2f94663a4f0": {
      "address": "0xB7f8BC63BbcaD18155201308C8f3540b07f84F5e",
      "txHash": "0xf4b314aa5cca2ff2eb63f998d5ee84bac88143f830c2c84b46da401ab3786976",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:458"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "155",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "201",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "251",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:102"
          },
          {
            "label": "vrfCoordinator",
            "offset": 0,
            "slot": "301",
            "type": "t_address",
            "contract": "VRFConsumerBaseV2Upgradable",
            "src": "contracts/abstract/VRFConsumerBaseV2Upgradable.sol:101"
          },
          {
            "label": "VRF_COORDINATOR",
            "offset": 0,
            "slot": "302",
            "type": "t_contract(VRFCoordinatorV2Interface)88",
            "contract": "Generator",
            "src": "contracts/abstract/Generator.sol:16"
          },
          {
            "label": "keyHash",
            "offset": 0,
            "slot": "303",
            "type": "t_bytes32",
            "contract": "Generator",
            "src": "contracts/abstract/Generator.sol:17"
          },
          {
            "label": "subscriptionId",
            "offset": 0,
            "slot": "304",
            "type": "t_uint64",
            "contract": "Generator",
            "src": "contracts/abstract/Generator.sol:18"
          },
          {
            "label": "callbackGasLimit",
            "offset": 8,
            "slot": "304",
            "type": "t_uint32",
            "contract": "Generator",
            "src": "contracts/abstract/Generator.sol:19"
          },
          {
            "label": "mintRequests",
            "offset": 0,
            "slot": "305",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "Generator",
            "src": "contracts/abstract/Generator.sol:27"
          },
          {
            "label": "pendingMints",
            "offset": 0,
            "slot": "306",
            "type": "t_mapping(t_address,t_struct(Mint)7336_storage)",
            "contract": "Generator",
            "src": "contracts/abstract/Generator.sol:28"
          },
          {
            "label": "whitelisted",
            "offset": 0,
            "slot": "307",
            "type": "t_bool",
            "contract": "Whitelist",
            "src": "contracts/abstract/Whitelist.sol:10"
          },
          {
            "label": "merkleRoot",
            "offset": 0,
            "slot": "308",
            "type": "t_bytes32",
            "contract": "Whitelist",
            "src": "contracts/abstract/Whitelist.sol:11"
          },
          {
            "label": "tokens",
            "offset": 0,
            "slot": "309",
            "type": "t_mapping(t_uint256,t_struct(Token)4712_storage)",
            "contract": "LabGame",
            "src": "contracts/LabGame.sol:50"
          },
          {
            "label": "hashes",
            "offset": 0,
            "slot": "310",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "LabGame",
            "src": "contracts/LabGame.sol:51"
          },
          {
            "label": "whitelistMints",
            "offset": 0,
            "slot": "311",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "LabGame",
            "src": "contracts/LabGame.sol:52"
          },
          {
            "label": "tokenOffset",
            "offset": 0,
            "slot": "312",
            "type": "t_uint256",
            "contract": "LabGame",
            "src": "contracts/LabGame.sol:54"
          },
          {
            "label": "serum",
            "offset": 0,
            "slot": "313",
            "type": "t_contract(Serum)7296",
            "contract": "LabGame",
            "src": "contracts/LabGame.sol:56"
          },
          {
            "label": "metadata",
            "offset": 0,
            "slot": "314",
            "type": "t_contract(Metadata)6474",
            "contract": "LabGame",
            "src": "contracts/LabGame.sol:57"
          },
          {
            "label": "blueprint",
            "offset": 0,
            "slot": "315",
            "type": "t_contract(Blueprint)4610",
            "contract": "LabGame",
            "src": "contracts/LabGame.sol:58"
          },
          {
            "label": "rarities",
            "offset": 0,
            "slot": "316",
            "type": "t_array(t_array(t_uint8)dyn_storage)17_storage",
            "contract": "LabGame",
            "src": "contracts/LabGame.sol:60"
          },
          {
            "label": "aliases",
            "offset": 0,
            "slot": "333",
            "type": "t_array(t_array(t_uint8)dyn_storage)17_storage",
            "contract": "LabGame",
            "src": "contracts/LabGame.sol:61"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_array(t_uint8)dyn_storage)17_storage": {
            "label": "uint8[][17]",
            "numberOfBytes": "544"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint8)9_storage": {
            "label": "uint8[9]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint8)dyn_storage": {
            "label": "uint8[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(Blueprint)4610": {
            "label": "contract Blueprint",
            "numberOfBytes": "20"
          },
          "t_contract(Metadata)6474": {
            "label": "contract Metadata",
            "numberOfBytes": "20"
          },
          "t_contract(Serum)7296": {
            "label": "contract Serum",
            "numberOfBytes": "20"
          },
          "t_contract(VRFCoordinatorV2Interface)88": {
            "label": "contract VRFCoordinatorV2Interface",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Mint)7336_storage)": {
            "label": "mapping(address => struct Generator.Mint)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Token)4712_storage)": {
            "label": "mapping(uint256 => struct LabGame.Token)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Mint)7336_storage": {
            "label": "struct Generator.Mint",
            "members": [
              {
                "label": "base",
                "type": "t_uint128",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "count",
                "type": "t_uint128",
                "offset": 16,
                "slot": "0"
              },
              {
                "label": "random",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Token)4712_storage": {
            "label": "struct LabGame.Token",
            "members": [
              {
                "label": "data",
                "type": "t_uint8",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "trait",
                "type": "t_array(t_uint8)9_storage",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint128": {
            "label": "uint128",
            "numberOfBytes": "16"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "2a47ad0e7477da41a8c9467bf20e6ff358a2c5f7270b23126c86050a45945e68": {
      "address": "0x0DCd1Bf9A1b36cE34237eEaFef220932846BCD82",
      "txHash": "0xc8c565471a39e0845ba429ca7caaeaf415757094987151328866ae9bcd817bbd",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:458"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "155",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "201",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "251",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:102"
          },
          {
            "label": "vrfCoordinator",
            "offset": 0,
            "slot": "301",
            "type": "t_address",
            "contract": "VRFConsumerBaseV2Upgradable",
            "src": "contracts/abstract/VRFConsumerBaseV2Upgradable.sol:101"
          },
          {
            "label": "VRF_COORDINATOR",
            "offset": 0,
            "slot": "302",
            "type": "t_contract(VRFCoordinatorV2Interface)88",
            "contract": "Generator",
            "src": "contracts/abstract/Generator.sol:16"
          },
          {
            "label": "keyHash",
            "offset": 0,
            "slot": "303",
            "type": "t_bytes32",
            "contract": "Generator",
            "src": "contracts/abstract/Generator.sol:17"
          },
          {
            "label": "subscriptionId",
            "offset": 0,
            "slot": "304",
            "type": "t_uint64",
            "contract": "Generator",
            "src": "contracts/abstract/Generator.sol:18"
          },
          {
            "label": "callbackGasLimit",
            "offset": 8,
            "slot": "304",
            "type": "t_uint32",
            "contract": "Generator",
            "src": "contracts/abstract/Generator.sol:19"
          },
          {
            "label": "mintRequests",
            "offset": 0,
            "slot": "305",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "Generator",
            "src": "contracts/abstract/Generator.sol:27"
          },
          {
            "label": "pendingMints",
            "offset": 0,
            "slot": "306",
            "type": "t_mapping(t_address,t_struct(Mint)7336_storage)",
            "contract": "Generator",
            "src": "contracts/abstract/Generator.sol:28"
          },
          {
            "label": "tokens",
            "offset": 0,
            "slot": "307",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "Blueprint",
            "src": "contracts/Blueprint.sol:31"
          },
          {
            "label": "tokenOffset",
            "offset": 0,
            "slot": "308",
            "type": "t_uint256",
            "contract": "Blueprint",
            "src": "contracts/Blueprint.sol:33"
          },
          {
            "label": "serum",
            "offset": 0,
            "slot": "309",
            "type": "t_contract(Serum)7296",
            "contract": "Blueprint",
            "src": "contracts/Blueprint.sol:35"
          },
          {
            "label": "labGame",
            "offset": 0,
            "slot": "310",
            "type": "t_contract(LabGame)5834",
            "contract": "Blueprint",
            "src": "contracts/Blueprint.sol:36"
          },
          {
            "label": "laboratory",
            "offset": 0,
            "slot": "311",
            "type": "t_contract(Laboratory)6072",
            "contract": "Blueprint",
            "src": "contracts/Blueprint.sol:37"
          },
          {
            "label": "tokenClaims",
            "offset": 0,
            "slot": "312",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "Blueprint",
            "src": "contracts/Blueprint.sol:39"
          },
          {
            "label": "pendingClaims",
            "offset": 0,
            "slot": "313",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Blueprint",
            "src": "contracts/Blueprint.sol:40"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(LabGame)5834": {
            "label": "contract LabGame",
            "numberOfBytes": "20"
          },
          "t_contract(Laboratory)6072": {
            "label": "contract Laboratory",
            "numberOfBytes": "20"
          },
          "t_contract(Serum)7296": {
            "label": "contract Serum",
            "numberOfBytes": "20"
          },
          "t_contract(VRFCoordinatorV2Interface)88": {
            "label": "contract VRFCoordinatorV2Interface",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Mint)7336_storage)": {
            "label": "mapping(address => struct Generator.Mint)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Mint)7336_storage": {
            "label": "struct Generator.Mint",
            "members": [
              {
                "label": "base",
                "type": "t_uint128",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "count",
                "type": "t_uint128",
                "offset": 16,
                "slot": "0"
              },
              {
                "label": "random",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint128": {
            "label": "uint128",
            "numberOfBytes": "16"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          }
        }
      }
    },
    "de26db83eb896c23df560adf117a076395af0d6ffc2022d48c4f4acff1bfce5a": {
      "address": "0xf5059a5D33d5853360D16C683c16e67980206f36",
      "txHash": "0xec1f373dc8c2af91f1a1fc77ccc7395b77d2c13f3f983863ff8ab1868088248e",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "label": "vrfCoordinator",
            "offset": 2,
            "slot": "0",
            "type": "t_address",
            "contract": "VRFConsumerBaseV2Upgradable",
            "src": "contracts/abstract/VRFConsumerBaseV2Upgradable.sol:101"
          },
          {
            "label": "VRF_COORDINATOR",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(VRFCoordinatorV2Interface)88",
            "contract": "Generator",
            "src": "contracts/abstract/Generator.sol:16"
          },
          {
            "label": "keyHash",
            "offset": 0,
            "slot": "2",
            "type": "t_bytes32",
            "contract": "Generator",
            "src": "contracts/abstract/Generator.sol:17"
          },
          {
            "label": "subscriptionId",
            "offset": 0,
            "slot": "3",
            "type": "t_uint64",
            "contract": "Generator",
            "src": "contracts/abstract/Generator.sol:18"
          },
          {
            "label": "callbackGasLimit",
            "offset": 8,
            "slot": "3",
            "type": "t_uint32",
            "contract": "Generator",
            "src": "contracts/abstract/Generator.sol:19"
          },
          {
            "label": "mintRequests",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "Generator",
            "src": "contracts/abstract/Generator.sol:27"
          },
          {
            "label": "pendingMints",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_address,t_struct(Mint)7336_storage)",
            "contract": "Generator",
            "src": "contracts/abstract/Generator.sol:28"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(VRFCoordinatorV2Interface)88": {
            "label": "contract VRFCoordinatorV2Interface",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_struct(Mint)7336_storage)": {
            "label": "mapping(address => struct Generator.Mint)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_struct(Mint)7336_storage": {
            "label": "struct Generator.Mint",
            "members": [
              {
                "label": "base",
                "type": "t_uint128",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "count",
                "type": "t_uint128",
                "offset": 16,
                "slot": "0"
              },
              {
                "label": "random",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint128": {
            "label": "uint128",
            "numberOfBytes": "16"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          }
        }
      }
    },
    "6ba62995ed764f01ac2d3eebdfe7d03da00ef01a5fec1cc7da5ed45db73fed9b": {
      "address": "0xCD8a1C3ba11CF5ECfa6267617243239504a98d90",
      "txHash": "0xf4d6cfee96e877944e8d7866d5b159fd963c66cb8eba717c98682956f2dd578e",
      "layout": {
        "storage": [
          {
            "label": "whitelisted",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Whitelist",
            "src": "contracts/abstract/Whitelist.sol:10"
          },
          {
            "label": "merkleRoot",
            "offset": 0,
            "slot": "1",
            "type": "t_bytes32",
            "contract": "Whitelist",
            "src": "contracts/abstract/Whitelist.sol:11"
          }
        ],
        "types": {
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          }
        }
      }
    }
  }
}
